/*****************************************************************************
*                                                                            *
*                     SOFTING Industrial Automation GmbH                     *
*                          Richard-Reitzner-Allee 6                          *
*                                D-85540 Haar                                *
*                        Phone: ++49-89-4 56 56-0                            *
*                          Fax: ++49-89-4 56 56-3 99                         *
*                                                                            *
*                            SOFTING CONFIDENTIAL                            *
*                                                                            *
*                     Copyright (C) SOFTING IA GmbH 2016                     *
*                             All Rights Reserved                            *
*                                                                            *
* NOTICE: All information contained herein is, and remains the property of   *
*   SOFTING Industrial Automation GmbH and its suppliers, if any. The intel- *
*   lectual and technical concepts contained herein are proprietary to       *
*   SOFTING Industrial Automation GmbH and its suppliers and may be covered  *
*   by German and Foreign Patents, patents in process, and are protected by  *
*   trade secret or copyright law. Dissemination of this information or      *
*   reproduction of this material is strictly forbidden unless prior         *
*   written permission is obtained from SOFTING Industrial Automation GmbH.  *
******************************************************************************
******************************************************************************
*                                                                            *
* PROJECT_NAME             OPC UA C++ Toolkit                                *
*                                                                            *
* VERSION                  5.52.0                                            *
*                                                                            *
* DATE                     26.09.2016                                        *
*                                                                            *
*****************************************************************************/

#ifndef CONSTANTS_H
#define CONSTANTS_H

#include "OSCompat.h"

////////////////////////////////////////////////////////////////////////////////
// SecurityPolicyUris
////////////////////////////////////////////////////////////////////////////////
//! Identifier for the security policy "None". This security policy can be used for applications with low security needs.
static const TCHAR SecurityPolicyUri_None[] = _T("http://opcfoundation.org/UA/SecurityPolicy#None");
//! Identifier for the security policy "Basic128Rsa15". This security policy can be used for applications with medium security needs.
static const TCHAR SecurityPolicyUri_Basic128Rsa15[] = _T("http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15");
//! Identifier for the security policy "Basic256". This security policy can be used for applications with high security needs.
static const TCHAR SecurityPolicyUri_Basic256[] = _T("http://opcfoundation.org/UA/SecurityPolicy#Basic256");
//! Identifier for the security policy "Basic256Sha256". This security policy can be used for applications with ultra high security needs.
static const TCHAR SecurityPolicyUri_Basic256Sha256[] = _T("http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256");
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// TransportProfileUris
////////////////////////////////////////////////////////////////////////////////
//! Indicates that the application supports the UA TCP transport protocol with
//! UA Binary Encoding and with UA Secure Conversation.
static const TCHAR TransportProfileUri_UaTcp_UaSc_UaBinary[] = _T("http://opcfoundation.org/UA-Profile/Transport/uatcp-uasc-uabinary");
//! Indicates that the application supports the HTTPS protocol with UA Binary Encoding.
static const TCHAR TransportProfileUri_Https_UaBinary[] = _T("http://opcfoundation.org/UA-Profile/Transport/https-uabinary");
//! Indicates that the application supports the HTTPS protocol with Soap-based Xml Encoding
static const TCHAR TransportProfileUri_Https_UaXml[] = _T("http://opcfoundation.org/UA-Profile/Transport/https-uaxml");
//! Indicates that the application supports "SOAP/HTTP" transport with UA Binary Encoding and
//! with UA Secure Conversation
static const TCHAR TransportProfileUri_SoapHttp_UaSc_UaBinary[] = _T("http://opcfoundation.org/UA-Profile/Transport/soaphttp-uasc-uabinary");
//! Indicates that the application supports "SOAP/HTTP" transport with UA Binary Encoding and
//! with WS Secure Conversation.
static const TCHAR TransportProfileUri_SoapHttp_WsSc_UaBinary[] = _T("http://opcfoundation.org/UA-Profile/Transport/soaphttp-wssc-uabinary");
//! Indicates that the application supports "SOAP/HTTP" transport with XML Encoding and with
//! WS Secure Conversation.
static const TCHAR TransportProfileUri_SoapHttp_WsSc_UaXml[] = _T("http://opcfoundation.org/UA-Profile/Transport/soaphttp-wssc-uaxml");
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// RedundantServerIndex with special meaning
////////////////////////////////////////////////////////////////////////////////
//! Indicates to use the index of the current primary server.
static const OTUInt32 OTRedundantServerIndex_Primary = (OTUInt32)-1;
//! Indicates an invalid index.
static const OTUInt32 OTRedundantServerIndex_Invalid = (OTUInt32)-2;
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// BrowseNames
////////////////////////////////////////////////////////////////////////////////

static const TCHAR BrowseName_AccessHistoryDataCapability[] = _T("AccessHistoryDataCapability");
static const TCHAR BrowseName_AccessHistoryEventsCapability[] = _T("AccessHistoryEventsCapability");
static const TCHAR BrowseName_AckedState[] = _T("AckedState");
static const TCHAR BrowseName_Acknowledge[] = _T("Acknowledge");
static const TCHAR BrowseName_AcknowledgeableConditionType[] = _T("AcknowledgeableConditionType");
static const TCHAR BrowseName_ActionTimeStamp[] = _T("ActionTimeStamp");
static const TCHAR BrowseName_ActivateSessionRequest[] = _T("ActivateSessionRequest");
static const TCHAR BrowseName_ActivateSessionResponse[] = _T("ActivateSessionResponse");
static const TCHAR BrowseName_ActiveState[] = _T("ActiveState");
static const TCHAR BrowseName_ActualSessionTimeout[] = _T("ActualSessionTimeout");
static const TCHAR BrowseName_AddCertificate[] = _T("AddCertificate");
static const TCHAR BrowseName_AddComment[] = _T("AddComment");
static const TCHAR BrowseName_AddNodesCount[] = _T("AddNodesCount");
static const TCHAR BrowseName_AddNodesItem[] = _T("AddNodesItem");
static const TCHAR BrowseName_AddNodesRequest[] = _T("AddNodesRequest");
static const TCHAR BrowseName_AddNodesResponse[] = _T("AddNodesResponse");
static const TCHAR BrowseName_AddNodesResult[] = _T("AddNodesResult");
static const TCHAR BrowseName_AddReferencesCount[] = _T("AddReferencesCount");
static const TCHAR BrowseName_AddReferencesItem[] = _T("AddReferencesItem");
static const TCHAR BrowseName_AddReferencesRequest[] = _T("AddReferencesRequest");
static const TCHAR BrowseName_AddReferencesResponse[] = _T("AddReferencesResponse");
static const TCHAR BrowseName_AddressSpaceFile[] = _T("AddressSpaceFile");
static const TCHAR BrowseName_AddressSpaceFileType[] = _T("AddressSpaceFileType");
static const TCHAR BrowseName_AggregateConfiguration[] = _T("AggregateConfiguration");
static const TCHAR BrowseName_AggregateConfigurationType[] = _T("AggregateConfigurationType");
static const TCHAR BrowseName_AggregateFilter[] = _T("AggregateFilter");
static const TCHAR BrowseName_AggregateFilterResult[] = _T("AggregateFilterResult");
static const TCHAR BrowseName_AggregateFunction_AnnotationCount[] = _T("AnnotationCount");
static const TCHAR BrowseName_AggregateFunction_Average[] = _T("Average");
static const TCHAR BrowseName_AggregateFunction_Count[] = _T("Count");
static const TCHAR BrowseName_AggregateFunction_Delta[] = _T("Delta");
static const TCHAR BrowseName_AggregateFunction_DeltaBounds[] = _T("DeltaBounds");
static const TCHAR BrowseName_AggregateFunction_DurationBad[] = _T("DurationBad");
static const TCHAR BrowseName_AggregateFunction_DurationGood[] = _T("DurationGood");
static const TCHAR BrowseName_AggregateFunction_DurationInStateNonZero[] = _T("DurationInStateNonZero");
static const TCHAR BrowseName_AggregateFunction_DurationInStateZero[] = _T("DurationInStateZero");
static const TCHAR BrowseName_AggregateFunction_End[] = _T("End");
static const TCHAR BrowseName_AggregateFunction_EndBound[] = _T("EndBound");
static const TCHAR BrowseName_AggregateFunction_Interpolative[] = _T("Interpolative");
static const TCHAR BrowseName_AggregateFunction_Maximum[] = _T("Maximum");
static const TCHAR BrowseName_AggregateFunction_Maximum2[] = _T("Maximum2");
static const TCHAR BrowseName_AggregateFunction_MaximumActualTime[] = _T("MaximumActualTime");
static const TCHAR BrowseName_AggregateFunction_MaximumActualTime2[] = _T("MaximumActualTime2");
static const TCHAR BrowseName_AggregateFunction_Minimum[] = _T("Minimum");
static const TCHAR BrowseName_AggregateFunction_Minimum2[] = _T("Minimum2");
static const TCHAR BrowseName_AggregateFunction_MinimumActualTime[] = _T("MinimumActualTime");
static const TCHAR BrowseName_AggregateFunction_MinimumActualTime2[] = _T("MinimumActualTime2");
static const TCHAR BrowseName_AggregateFunction_NumberOfTransitions[] = _T("NumberOfTransitions");
static const TCHAR BrowseName_AggregateFunction_PercentBad[] = _T("PercentBad");
static const TCHAR BrowseName_AggregateFunction_PercentGood[] = _T("PercentGood");
static const TCHAR BrowseName_AggregateFunction_Range[] = _T("Range");
static const TCHAR BrowseName_AggregateFunction_Range2[] = _T("Range2");
static const TCHAR BrowseName_AggregateFunction_StandardDeviationPopulation[] = _T("StandardDeviationPopulation");
static const TCHAR BrowseName_AggregateFunction_StandardDeviationSample[] = _T("StandardDeviationSample");
static const TCHAR BrowseName_AggregateFunction_Start[] = _T("Start");
static const TCHAR BrowseName_AggregateFunction_StartBound[] = _T("StartBound");
static const TCHAR BrowseName_AggregateFunction_TimeAverage[] = _T("TimeAverage");
static const TCHAR BrowseName_AggregateFunction_TimeAverage2[] = _T("TimeAverage2");
static const TCHAR BrowseName_AggregateFunction_Total[] = _T("Total");
static const TCHAR BrowseName_AggregateFunction_Total2[] = _T("Total2");
static const TCHAR BrowseName_AggregateFunction_VariancePopulation[] = _T("VariancePopulation");
static const TCHAR BrowseName_AggregateFunction_VarianceSample[] = _T("VarianceSample");
static const TCHAR BrowseName_AggregateFunction_WorstQuality[] = _T("WorstQuality");
static const TCHAR BrowseName_AggregateFunction_WorstQuality2[] = _T("WorstQuality2");
static const TCHAR BrowseName_AggregateFunctions[] = _T("AggregateFunctions");
static const TCHAR BrowseName_AggregateFunctionType[] = _T("AggregateFunctionType");
static const TCHAR BrowseName_Aggregates[] = _T("Aggregates");
static const TCHAR BrowseName_AlarmConditionType[] = _T("AlarmConditionType");
static const TCHAR BrowseName_AllowNulls[] = _T("AllowNulls");
static const TCHAR BrowseName_AlwaysGeneratesEvent[] = _T("AlwaysGeneratesEvent");
static const TCHAR BrowseName_AnalogItemType[] = _T("AnalogItemType");
static const TCHAR BrowseName_Annotation[] = _T("Annotation");
static const TCHAR BrowseName_Annotations[] = _T("Annotations");
static const TCHAR BrowseName_AnonymousIdentityToken[] = _T("AnonymousIdentityToken");
static const TCHAR BrowseName_ApplicationCertificateType[] = _T("ApplicationCertificateType");
static const TCHAR BrowseName_ApplicationDescription[] = _T("ApplicationDescription");
static const TCHAR BrowseName_ApplicationInstanceCertificate[] = _T("ApplicationInstanceCertificate");
static const TCHAR BrowseName_ApplicationType[] = _T("ApplicationType");
static const TCHAR BrowseName_Argument[] = _T("Argument");
static const TCHAR BrowseName_ArrayItemType[] = _T("ArrayItemType");
static const TCHAR BrowseName_ArrayTestType[] = _T("ArrayTestType");
static const TCHAR BrowseName_AttributeId[] = _T("AttributeId");
static const TCHAR BrowseName_AttributeOperand[] = _T("AttributeOperand");
static const TCHAR BrowseName_AttributeWriteMask[] = _T("AttributeWriteMask");
static const TCHAR BrowseName_AuditActivateSessionEventType[] = _T("AuditActivateSessionEventType");
static const TCHAR BrowseName_AuditAddNodesEventType[] = _T("AuditAddNodesEventType");
static const TCHAR BrowseName_AuditAddReferencesEventType[] = _T("AuditAddReferencesEventType");
static const TCHAR BrowseName_AuditCancelEventType[] = _T("AuditCancelEventType");
static const TCHAR BrowseName_AuditCertificateDataMismatchEventType[] = _T("AuditCertificateDataMismatchEventType");
static const TCHAR BrowseName_AuditCertificateEventType[] = _T("AuditCertificateEventType");
static const TCHAR BrowseName_AuditCertificateExpiredEventType[] = _T("AuditCertificateExpiredEventType");
static const TCHAR BrowseName_AuditCertificateInvalidEventType[] = _T("AuditCertificateInvalidEventType");
static const TCHAR BrowseName_AuditCertificateMismatchEventType[] = _T("AuditCertificateMismatchEventType");
static const TCHAR BrowseName_AuditCertificateRevokedEventType[] = _T("AuditCertificateRevokedEventType");
static const TCHAR BrowseName_AuditCertificateUntrustedEventType[] = _T("AuditCertificateUntrustedEventType");
static const TCHAR BrowseName_AuditChannelEventType[] = _T("AuditChannelEventType");
static const TCHAR BrowseName_AuditConditionAcknowledgeEventType[] = _T("AuditConditionAcknowledgeEventType");
static const TCHAR BrowseName_AuditConditionCommentEventType[] = _T("AuditConditionCommentEventType");
static const TCHAR BrowseName_AuditConditionConfirmEventType[] = _T("AuditConditionConfirmEventType");
static const TCHAR BrowseName_AuditConditionEnableEventType[] = _T("AuditConditionEnableEventType");
static const TCHAR BrowseName_AuditConditionEventType[] = _T("AuditConditionEventType");
static const TCHAR BrowseName_AuditConditionRespondEventType[] = _T("AuditConditionRespondEventType");
static const TCHAR BrowseName_AuditConditionShelvingEventType[] = _T("AuditConditionShelvingEventType");
static const TCHAR BrowseName_AuditCreateSessionEventType[] = _T("AuditCreateSessionEventType");
static const TCHAR BrowseName_AuditDeleteNodesEventType[] = _T("AuditDeleteNodesEventType");
static const TCHAR BrowseName_AuditDeleteReferencesEventType[] = _T("AuditDeleteReferencesEventType");
static const TCHAR BrowseName_AuditEventType[] = _T("AuditEventType");
static const TCHAR BrowseName_AuditHistoryAtTimeDeleteEventType[] = _T("AuditHistoryAtTimeDeleteEventType");
static const TCHAR BrowseName_AuditHistoryDeleteEventType[] = _T("AuditHistoryDeleteEventType");
static const TCHAR BrowseName_AuditHistoryEventDeleteEventType[] = _T("AuditHistoryEventDeleteEventType");
static const TCHAR BrowseName_AuditHistoryEventUpdateEventType[] = _T("AuditHistoryEventUpdateEventType");
static const TCHAR BrowseName_AuditHistoryRawModifyDeleteEventType[] = _T("AuditHistoryRawModifyDeleteEventType");
static const TCHAR BrowseName_AuditHistoryUpdateEventType[] = _T("AuditHistoryUpdateEventType");
static const TCHAR BrowseName_AuditHistoryValueUpdateEventType[] = _T("AuditHistoryValueUpdateEventType");
static const TCHAR BrowseName_Auditing[] = _T("Auditing");
static const TCHAR BrowseName_AuditNodeManagementEventType[] = _T("AuditNodeManagementEventType");
static const TCHAR BrowseName_AuditOpenSecureChannelEventType[] = _T("AuditOpenSecureChannelEventType");
static const TCHAR BrowseName_AuditProgramTransitionEventType[] = _T("AuditProgramTransitionEventType");
static const TCHAR BrowseName_AuditSecurityEventType[] = _T("AuditSecurityEventType");
static const TCHAR BrowseName_AuditSessionEventType[] = _T("AuditSessionEventType");
static const TCHAR BrowseName_AuditUpdateEventType[] = _T("AuditUpdateEventType");
static const TCHAR BrowseName_AuditUpdateMethodEventType[] = _T("AuditUpdateMethodEventType");
static const TCHAR BrowseName_AuditUpdateStateEventType[] = _T("AuditUpdateStateEventType");
static const TCHAR BrowseName_AuditUrlMismatchEventType[] = _T("AuditUrlMismatchEventType");
static const TCHAR BrowseName_AuditWriteUpdateEventType[] = _T("AuditWriteUpdateEventType");
static const TCHAR BrowseName_AuthenticationMechanism[] = _T("AuthenticationMechanism");
static const TCHAR BrowseName_AuthorityType[] = _T("AuthorityType");
static const TCHAR BrowseName_AutoDelete[] = _T("AutoDelete");
static const TCHAR BrowseName_AxisDefinition[] = _T("AxisDefinition");
static const TCHAR BrowseName_AxisInformation[] = _T("AxisInformation");
static const TCHAR BrowseName_AxisScaleEnumeration[] = _T("AxisScaleEnumeration");
static const TCHAR BrowseName_AxisScaleType[] = _T("AxisScaleType");
static const TCHAR BrowseName_BaseConditionClassType[] = _T("BaseConditionClassType");
static const TCHAR BrowseName_BaseDataType[] = _T("BaseDataType");
static const TCHAR BrowseName_BaseDataVariableType[] = _T("BaseDataVariableType");
static const TCHAR BrowseName_BaseEventType[] = _T("BaseEventType");
static const TCHAR BrowseName_BaseModelChangeEventType[] = _T("BaseModelChangeEventType");
static const TCHAR BrowseName_BaseObjectType[] = _T("BaseObjectType");
static const TCHAR BrowseName_BaseVariableType[] = _T("BaseVariableType");
static const TCHAR BrowseName_BitFieldMaskDataType[] = _T("BitFieldMaskDataType");
static const TCHAR BrowseName_BitMask[] = _T("BitMask");
static const TCHAR BrowseName_Boolean[] = _T("Boolean");
static const TCHAR BrowseName_BranchId[] = _T("BranchId");
static const TCHAR BrowseName_BrowseCount[] = _T("BrowseCount");
static const TCHAR BrowseName_BrowseDescription[] = _T("BrowseDescription");
static const TCHAR BrowseName_BrowseDirection[] = _T("BrowseDirection");
static const TCHAR BrowseName_BrowseNextCount[] = _T("BrowseNextCount");
static const TCHAR BrowseName_BrowseNextRequest[] = _T("BrowseNextRequest");
static const TCHAR BrowseName_BrowseNextResponse[] = _T("BrowseNextResponse");
static const TCHAR BrowseName_BrowsePath[] = _T("BrowsePath");
static const TCHAR BrowseName_BrowsePathResult[] = _T("BrowsePathResult");
static const TCHAR BrowseName_BrowsePathTarget[] = _T("BrowsePathTarget");
static const TCHAR BrowseName_BrowseRequest[] = _T("BrowseRequest");
static const TCHAR BrowseName_BrowseResponse[] = _T("BrowseResponse");
static const TCHAR BrowseName_BrowseResult[] = _T("BrowseResult");
static const TCHAR BrowseName_BrowseResultMask[] = _T("BrowseResultMask");
static const TCHAR BrowseName_BuildDate[] = _T("BuildDate");
static const TCHAR BrowseName_BuildInfo[] = _T("BuildInfo");
static const TCHAR BrowseName_BuildInfoType[] = _T("BuildInfoType");
static const TCHAR BrowseName_BuildNumber[] = _T("BuildNumber");
static const TCHAR BrowseName_Byte[] = _T("Byte");
static const TCHAR BrowseName_ByteString[] = _T("ByteString");
static const TCHAR BrowseName_CallCount[] = _T("CallCount");
static const TCHAR BrowseName_CallMethodRequest[] = _T("CallMethodRequest");
static const TCHAR BrowseName_CallMethodResult[] = _T("CallMethodResult");
static const TCHAR BrowseName_CallRequest[] = _T("CallRequest");
static const TCHAR BrowseName_CallResponse[] = _T("CallResponse");
static const TCHAR BrowseName_CancelRequest[] = _T("CancelRequest");
static const TCHAR BrowseName_CancelResponse[] = _T("CancelResponse");
static const TCHAR BrowseName_Certificate[] = _T("Certificate");
static const TCHAR BrowseName_CertificateType[] = _T("CertificateType");
static const TCHAR BrowseName_CertificateUpdatedAuditEventType[] = _T("CertificateUpdatedAuditEventType");
static const TCHAR BrowseName_Changes[] = _T("Changes");
static const TCHAR BrowseName_ChannelSecurityToken[] = _T("ChannelSecurityToken");
static const TCHAR BrowseName_ClientAuditEntryId[] = _T("ClientAuditEntryId");
static const TCHAR BrowseName_ClientCertificate[] = _T("ClientCertificate");
static const TCHAR BrowseName_ClientCertificateThumbprint[] = _T("ClientCertificateThumbprint");
static const TCHAR BrowseName_ClientConnectionTime[] = _T("ClientConnectionTime");
static const TCHAR BrowseName_ClientDescription[] = _T("ClientDescription");
static const TCHAR BrowseName_ClientLastContactTime[] = _T("ClientLastContactTime");
static const TCHAR BrowseName_ClientSoftwareCertificates[] = _T("ClientSoftwareCertificates");
static const TCHAR BrowseName_ClientUserId[] = _T("ClientUserId");
static const TCHAR BrowseName_ClientUserIdHistory[] = _T("ClientUserIdHistory");
static const TCHAR BrowseName_ClientUserIdOfSession[] = _T("ClientUserIdOfSession");
static const TCHAR BrowseName_Close[] = _T("Close");
static const TCHAR BrowseName_CloseAndUpdate[] = _T("CloseAndUpdate");
static const TCHAR BrowseName_CloseSecureChannelRequest[] = _T("CloseSecureChannelRequest");
static const TCHAR BrowseName_CloseSecureChannelResponse[] = _T("CloseSecureChannelResponse");
static const TCHAR BrowseName_CloseSessionRequest[] = _T("CloseSessionRequest");
static const TCHAR BrowseName_CloseSessionResponse[] = _T("CloseSessionResponse");
static const TCHAR BrowseName_Comment[] = _T("Comment");
static const TCHAR BrowseName_ComplexNumberType[] = _T("ComplexNumberType");
static const TCHAR BrowseName_ComplianceLevel[] = _T("ComplianceLevel");
static const TCHAR BrowseName_CompositeTestType[] = _T("CompositeTestType");
static const TCHAR BrowseName_ConditionClassId[] = _T("ConditionClassId");
static const TCHAR BrowseName_ConditionClassName[] = _T("ConditionClassName");
static const TCHAR BrowseName_ConditionName[] = _T("ConditionName");
static const TCHAR BrowseName_ConditionRefresh[] = _T("ConditionRefresh");
static const TCHAR BrowseName_ConditionType[] = _T("ConditionType");
static const TCHAR BrowseName_ConditionVariableType[] = _T("ConditionVariableType");
static const TCHAR BrowseName_Confirm[] = _T("Confirm");
static const TCHAR BrowseName_ConfirmedState[] = _T("ConfirmedState");
static const TCHAR BrowseName_ContentFilter[] = _T("ContentFilter");
static const TCHAR BrowseName_ContentFilterElement[] = _T("ContentFilterElement");
static const TCHAR BrowseName_ContentFilterElementResult[] = _T("ContentFilterElementResult");
static const TCHAR BrowseName_ContentFilterResult[] = _T("ContentFilterResult");
static const TCHAR BrowseName_Context[] = _T("Context");
static const TCHAR BrowseName_ContinuationPoint[] = _T("ContinuationPoint");
static const TCHAR BrowseName_Counter[] = _T("Counter");
static const TCHAR BrowseName_Creatable[] = _T("Creatable");
static const TCHAR BrowseName_CreateClientName[] = _T("CreateClientName");
static const TCHAR BrowseName_CreateMonitoredItemsCount[] = _T("CreateMonitoredItemsCount");
static const TCHAR BrowseName_CreateMonitoredItemsRequest[] = _T("CreateMonitoredItemsRequest");
static const TCHAR BrowseName_CreateMonitoredItemsResponse[] = _T("CreateMonitoredItemsResponse");
static const TCHAR BrowseName_CreateSessionId[] = _T("CreateSessionId");
static const TCHAR BrowseName_CreateSessionRequest[] = _T("CreateSessionRequest");
static const TCHAR BrowseName_CreateSessionResponse[] = _T("CreateSessionResponse");
static const TCHAR BrowseName_CreateSubscriptionCount[] = _T("CreateSubscriptionCount");
static const TCHAR BrowseName_CreateSubscriptionRequest[] = _T("CreateSubscriptionRequest");
static const TCHAR BrowseName_CreateSubscriptionResponse[] = _T("CreateSubscriptionResponse");
static const TCHAR BrowseName_CubeItemType[] = _T("CubeItemType");
static const TCHAR BrowseName_CumulatedSessionCount[] = _T("CumulatedSessionCount");
static const TCHAR BrowseName_CumulatedSubscriptionCount[] = _T("CumulatedSubscriptionCount");
static const TCHAR BrowseName_CurrentKeepAliveCount[] = _T("CurrentKeepAliveCount");
static const TCHAR BrowseName_CurrentLifetimeCount[] = _T("CurrentLifetimeCount");
static const TCHAR BrowseName_CurrentMonitoredItemsCount[] = _T("CurrentMonitoredItemsCount");
static const TCHAR BrowseName_CurrentPublishRequestsInQueue[] = _T("CurrentPublishRequestsInQueue");
static const TCHAR BrowseName_CurrentServerId[] = _T("CurrentServerId");
static const TCHAR BrowseName_CurrentSessionCount[] = _T("CurrentSessionCount");
static const TCHAR BrowseName_CurrentState[] = _T("CurrentState");
static const TCHAR BrowseName_CurrentSubscriptionCount[] = _T("CurrentSubscriptionCount");
static const TCHAR BrowseName_CurrentSubscriptionsCount[] = _T("CurrentSubscriptionsCount");
static const TCHAR BrowseName_CurrentTime[] = _T("CurrentTime");
static const TCHAR BrowseName_DataChangeFilter[] = _T("DataChangeFilter");
static const TCHAR BrowseName_DataChangeNotification[] = _T("DataChangeNotification");
static const TCHAR BrowseName_DataChangeNotificationsCount[] = _T("DataChangeNotificationsCount");
static const TCHAR BrowseName_DataChangeTrigger[] = _T("DataChangeTrigger");
static const TCHAR BrowseName_DataItemType[] = _T("DataItemType");
static const TCHAR BrowseName_DataTypeAttributes[] = _T("DataTypeAttributes");
static const TCHAR BrowseName_DataTypeDescriptionType[] = _T("DataTypeDescriptionType");
static const TCHAR BrowseName_DataTypeDictionaryType[] = _T("DataTypeDictionaryType");
static const TCHAR BrowseName_DataTypeEncodingType[] = _T("DataTypeEncodingType");
static const TCHAR BrowseName_DataTypeNode[] = _T("DataTypeNode");
static const TCHAR BrowseName_DataTypesFolder[] = _T("DataTypes");
static const TCHAR BrowseName_DataTypeSystemType[] = _T("DataTypeSystemType");
static const TCHAR BrowseName_DataTypeVersion[] = _T("DataTypeVersion");
static const TCHAR BrowseName_DataValue[] = _T("DataValue");
static const TCHAR BrowseName_Date[] = _T("Date");
static const TCHAR BrowseName_DateTime[] = _T("DateTime");
static const TCHAR BrowseName_DeadbandType[] = _T("DeadbandType");
static const TCHAR BrowseName_DefaultBinary[] = _T("Default Binary");
static const TCHAR BrowseName_DefaultResponse[] = _T("DefaultResponse");
static const TCHAR BrowseName_DefaultXml[] = _T("Default XML");
static const TCHAR BrowseName_Definition[] = _T("Definition");
static const TCHAR BrowseName_Deletable[] = _T("Deletable");
static const TCHAR BrowseName_DeleteAtTimeCapability[] = _T("DeleteAtTimeCapability");
static const TCHAR BrowseName_DeleteAtTimeDetails[] = _T("DeleteAtTimeDetails");
static const TCHAR BrowseName_DeleteEventCapability[] = _T("DeleteEventCapability");
static const TCHAR BrowseName_DeleteEventDetails[] = _T("DeleteEventDetails");
static const TCHAR BrowseName_DeleteMonitoredItemsCount[] = _T("DeleteMonitoredItemsCount");
static const TCHAR BrowseName_DeleteMonitoredItemsRequest[] = _T("DeleteMonitoredItemsRequest");
static const TCHAR BrowseName_DeleteMonitoredItemsResponse[] = _T("DeleteMonitoredItemsResponse");
static const TCHAR BrowseName_DeleteNodesCount[] = _T("DeleteNodesCount");
static const TCHAR BrowseName_DeleteNodesItem[] = _T("DeleteNodesItem");
static const TCHAR BrowseName_DeleteNodesRequest[] = _T("DeleteNodesRequest");
static const TCHAR BrowseName_DeleteNodesResponse[] = _T("DeleteNodesResponse");
static const TCHAR BrowseName_DeleteRawCapability[] = _T("DeleteRawCapability");
static const TCHAR BrowseName_DeleteRawModifiedDetails[] = _T("DeleteRawModifiedDetails");
static const TCHAR BrowseName_DeleteReferencesCount[] = _T("DeleteReferencesCount");
static const TCHAR BrowseName_DeleteReferencesItem[] = _T("DeleteReferencesItem");
static const TCHAR BrowseName_DeleteReferencesRequest[] = _T("DeleteReferencesRequest");
static const TCHAR BrowseName_DeleteReferencesResponse[] = _T("DeleteReferencesResponse");
static const TCHAR BrowseName_DeleteSubscriptionsCount[] = _T("DeleteSubscriptionsCount");
static const TCHAR BrowseName_DeleteSubscriptionsRequest[] = _T("DeleteSubscriptionsRequest");
static const TCHAR BrowseName_DeleteSubscriptionsResponse[] = _T("DeleteSubscriptionsResponse");
static const TCHAR BrowseName_DeviceFailureEventType[] = _T("DeviceFailureEventType");
static const TCHAR BrowseName_DiagnosticInfo[] = _T("DiagnosticInfo");
static const TCHAR BrowseName_DialogConditionType[] = _T("DialogConditionType");
static const TCHAR BrowseName_DialogState[] = _T("DialogState");
static const TCHAR BrowseName_DictionaryFragment[] = _T("DictionaryFragment");
static const TCHAR BrowseName_Disable[] = _T("Disable");
static const TCHAR BrowseName_DisableCount[] = _T("DisableCount");
static const TCHAR BrowseName_DisabledMonitoredItemCount[] = _T("DisabledMonitoredItemCount");
static const TCHAR BrowseName_DisabledMonitoredItemsSamplingCount[] = _T("DisabledMonitoredItemsSamplingCount");
static const TCHAR BrowseName_DiscardedMessageCount[] = _T("DiscardedMessageCount");
static const TCHAR BrowseName_DiscreteAlarmType[] = _T("DiscreteAlarmType");
static const TCHAR BrowseName_DiscreteItemType[] = _T("DiscreteItemType");
static const TCHAR BrowseName_Double[] = _T("Double");
static const TCHAR BrowseName_DoubleComplexNumberType[] = _T("DoubleComplexNumberType");
static const TCHAR BrowseName_Duration[] = _T("Duration");
static const TCHAR BrowseName_EffectiveDisplayName[] = _T("EffectiveDisplayName");
static const TCHAR BrowseName_EffectiveTransitionTime[] = _T("EffectiveTransitionTime");
static const TCHAR BrowseName_ElementOperand[] = _T("ElementOperand");
static const TCHAR BrowseName_Enable[] = _T("Enable");
static const TCHAR BrowseName_EnableCount[] = _T("EnableCount");
static const TCHAR BrowseName_EnabledFlag[] = _T("EnabledFlag");
static const TCHAR BrowseName_EnabledState[] = _T("EnabledState");
static const TCHAR BrowseName_Encoding[] = _T("Encoding");
static const TCHAR BrowseName_EndpointConfiguration[] = _T("EndpointConfiguration");
static const TCHAR BrowseName_EndpointDescription[] = _T("EndpointDescription");
static const TCHAR BrowseName_EndpointUrl[] = _T("EndpointUrl");
static const TCHAR BrowseName_EndpointUrlListDataType[] = _T("EndpointUrlListDataType");
static const TCHAR BrowseName_EndTime[] = _T("EndTime");
static const TCHAR BrowseName_EngineeringUnits[] = _T("EngineeringUnits");
static const TCHAR BrowseName_EnumeratedTestType[] = _T("EnumeratedTestType");
static const TCHAR BrowseName_Enumeration[] = _T("Enumeration");
static const TCHAR BrowseName_EnumStrings[] = _T("EnumStrings");
static const TCHAR BrowseName_EnumValues[] = _T("EnumValues");
static const TCHAR BrowseName_EnumValueType[] = _T("EnumValueType");
static const TCHAR BrowseName_EUInformation[] = _T("EUInformation");
static const TCHAR BrowseName_EURange[] = _T("EURange");
static const TCHAR BrowseName_EventFieldList[] = _T("EventFieldList");
static const TCHAR BrowseName_EventFilter[] = _T("EventFilter");
static const TCHAR BrowseName_EventFilterResult[] = _T("EventFilterResult");
static const TCHAR BrowseName_EventId[] = _T("EventId");
static const TCHAR BrowseName_EventIds[] = _T("EventIds");
static const TCHAR BrowseName_EventNotificationList[] = _T("EventNotificationList");
static const TCHAR BrowseName_EventNotificationsCount[] = _T("EventNotificationsCount");
static const TCHAR BrowseName_EventQueueOverFlowCount[] = _T("EventQueueOverFlowCount");
static const TCHAR BrowseName_EventQueueOverflowEventType[] = _T("EventQueueOverflowEventType");
static const TCHAR BrowseName_EventType[] = _T("EventType");
static const TCHAR BrowseName_EventTypesFolder[] = _T("EventTypes");
static const TCHAR BrowseName_ExceptionDeviation[] = _T("ExceptionDeviation");
static const TCHAR BrowseName_ExceptionDeviationFormat[] = _T("ExceptionDeviationFormat");
static const TCHAR BrowseName_ExclusiveDeviationAlarmType[] = _T("ExclusiveDeviationAlarmType");
static const TCHAR BrowseName_ExclusiveLevelAlarmType[] = _T("ExclusiveLevelAlarmType");
static const TCHAR BrowseName_ExclusiveLimitAlarmType[] = _T("ExclusiveLimitAlarmType");
static const TCHAR BrowseName_ExclusiveLimitStateMachineType[] = _T("ExclusiveLimitStateMachineType");
static const TCHAR BrowseName_ExclusiveRateOfChangeAlarmType[] = _T("ExclusiveRateOfChangeAlarmType");
static const TCHAR BrowseName_ExpandedNodeId[] = _T("ExpandedNodeId");
static const TCHAR BrowseName_ExportNamespace[] = _T("ExportNamespace");
static const TCHAR BrowseName_FalseState[] = _T("FalseState");
static const TCHAR BrowseName_FileType[] = _T("FileType");
static const TCHAR BrowseName_Filter[] = _T("Filter");
static const TCHAR BrowseName_FilterOperand[] = _T("FilterOperand");
static const TCHAR BrowseName_FilterOperator[] = _T("FilterOperator");
static const TCHAR BrowseName_FinalResultData[] = _T("FinalResultData");
static const TCHAR BrowseName_FindServersOnNetworkRequest[] = _T("FindServersOnNetworkRequest");
static const TCHAR BrowseName_FindServersOnNetworkResponse[] = _T("FindServersOnNetworkResponse");
static const TCHAR BrowseName_FindServersRequest[] = _T("FindServersRequest");
static const TCHAR BrowseName_FindServersResponse[] = _T("FindServersResponse");
static const TCHAR BrowseName_FiniteStateMachineType[] = _T("FiniteStateMachineType");
static const TCHAR BrowseName_FiniteStateVariableType[] = _T("FiniteStateVariableType");
static const TCHAR BrowseName_FiniteTransitionVariableType[] = _T("FiniteTransitionVariableType");
static const TCHAR BrowseName_Float[] = _T("Float");
static const TCHAR BrowseName_FolderType[] = _T("FolderType");
static const TCHAR BrowseName_FromState[] = _T("FromState");
static const TCHAR BrowseName_GeneralModelChangeEventType[] = _T("GeneralModelChangeEventType");
static const TCHAR BrowseName_GeneratesEvent[] = _T("GeneratesEvent");
static const TCHAR BrowseName_GetEndpointsRequest[] = _T("GetEndpointsRequest");
static const TCHAR BrowseName_GetEndpointsResponse[] = _T("GetEndpointsResponse");
static const TCHAR BrowseName_GetMonitoredItems[] = _T("GetMonitoredItems");
static const TCHAR BrowseName_GetPosition[] = _T("GetPosition");
static const TCHAR BrowseName_Guid[] = _T("Guid");
static const TCHAR BrowseName_HAConfiguration[] = _T("HA Configuration");
static const TCHAR BrowseName_Halt[] = _T("Halt");
static const TCHAR BrowseName_Halted[] = _T("Halted");
static const TCHAR BrowseName_HaltedToReady[] = _T("HaltedToReady");
static const TCHAR BrowseName_HasCause[] = _T("HasCause");
static const TCHAR BrowseName_HasChild[] = _T("HasChild");
static const TCHAR BrowseName_HasComponent[] = _T("HasComponent");
static const TCHAR BrowseName_HasCondition[] = _T("HasCondition");
static const TCHAR BrowseName_HasDescription[] = _T("HasDescription");
static const TCHAR BrowseName_HasEffect[] = _T("HasEffect");
static const TCHAR BrowseName_HasEncoding[] = _T("HasEncoding");
static const TCHAR BrowseName_HasEventSource[] = _T("HasEventSource");
static const TCHAR BrowseName_HasFalseSubState[] = _T("HasFalseSubState");
static const TCHAR BrowseName_HasHistoricalConfiguration[] = _T("HasHistoricalConfiguration");
static const TCHAR BrowseName_HasModellingRule[] = _T("HasModellingRule");
static const TCHAR BrowseName_HasNotifier[] = _T("HasNotifier");
static const TCHAR BrowseName_HasOrderedComponent[] = _T("HasOrderedComponent");
static const TCHAR BrowseName_HasProperty[] = _T("HasProperty");
static const TCHAR BrowseName_HasSubStateMachine[] = _T("HasSubStateMachine");
static const TCHAR BrowseName_HasSubtype[] = _T("HasSubtype");
static const TCHAR BrowseName_HasTrueSubState[] = _T("HasTrueSubState");
static const TCHAR BrowseName_HasTypeDefinition[] = _T("HasTypeDefinition");
static const TCHAR BrowseName_HierarchicalReferences[] = _T("HierarchicalReferences");
static const TCHAR BrowseName_High[] = _T("High");
static const TCHAR BrowseName_HighHigh[] = _T("HighHigh");
static const TCHAR BrowseName_HighHighLimit[] = _T("HighHighLimit");
static const TCHAR BrowseName_HighHighState[] = _T("HighHighState");
static const TCHAR BrowseName_HighHighToHigh[] = _T("HighHighToHigh");
static const TCHAR BrowseName_HighLimit[] = _T("HighLimit");
static const TCHAR BrowseName_HighState[] = _T("HighState");
static const TCHAR BrowseName_HighToHighHigh[] = _T("HighToHighHigh");
static const TCHAR BrowseName_HistoricalDataConfigurationType[] = _T("HistoricalDataConfigurationType");
static const TCHAR BrowseName_HistoricalEventFilter[] = _T("HistoricalEventFilter");
static const TCHAR BrowseName_HistoryData[] = _T("HistoryData");
static const TCHAR BrowseName_HistoryEvent[] = _T("HistoryEvent");
static const TCHAR BrowseName_HistoryEventFieldList[] = _T("HistoryEventFieldList");
static const TCHAR BrowseName_HistoryModifiedData[] = _T("HistoryModifiedData");
static const TCHAR BrowseName_HistoryReadCount[] = _T("HistoryReadCount");
static const TCHAR BrowseName_HistoryReadDetails[] = _T("HistoryReadDetails");
static const TCHAR BrowseName_HistoryReadRequest[] = _T("HistoryReadRequest");
static const TCHAR BrowseName_HistoryReadResponse[] = _T("HistoryReadResponse");
static const TCHAR BrowseName_HistoryReadResult[] = _T("HistoryReadResult");
static const TCHAR BrowseName_HistoryReadValueId[] = _T("HistoryReadValueId");
static const TCHAR BrowseName_HistoryServerCapabilities[] = _T("HistoryServerCapabilities");
static const TCHAR BrowseName_HistoryServerCapabilitiesType[] = _T("HistoryServerCapabilitiesType");
static const TCHAR BrowseName_HistoryUpdateCount[] = _T("HistoryUpdateCount");
static const TCHAR BrowseName_HistoryUpdateDetails[] = _T("HistoryUpdateDetails");
static const TCHAR BrowseName_HistoryUpdateRequest[] = _T("HistoryUpdateRequest");
static const TCHAR BrowseName_HistoryUpdateResponse[] = _T("HistoryUpdateResponse");
static const TCHAR BrowseName_HistoryUpdateResult[] = _T("HistoryUpdateResult");
static const TCHAR BrowseName_HistoryUpdateType[] = _T("HistoryUpdateType");
static const TCHAR BrowseName_HttpsCertificateType[] = _T("HttpsCertificateType");
static const TCHAR BrowseName_Icon[] = _T("Icon");
static const TCHAR BrowseName_Id[] = _T("Id");
static const TCHAR BrowseName_IdType[] = _T("IdType");
static const TCHAR BrowseName_Image[] = _T("Image");
static const TCHAR BrowseName_ImageBMP[] = _T("ImageBMP");
static const TCHAR BrowseName_ImageGIF[] = _T("ImageGIF");
static const TCHAR BrowseName_ImageItemType[] = _T("ImageItemType");
static const TCHAR BrowseName_ImageJPG[] = _T("ImageJPG");
static const TCHAR BrowseName_ImagePNG[] = _T("ImagePNG");
static const TCHAR BrowseName_IndexRange[] = _T("IndexRange");
static const TCHAR BrowseName_InitialStateType[] = _T("InitialStateType");
static const TCHAR BrowseName_InputArguments[] = _T("InputArguments");
static const TCHAR BrowseName_InputNode[] = _T("InputNode");
static const TCHAR BrowseName_InsertAnnotationCapability[] = _T("InsertAnnotationCapability");
static const TCHAR BrowseName_InsertDataCapability[] = _T("InsertDataCapability");
static const TCHAR BrowseName_InsertEventCapability[] = _T("InsertEventCapability");
static const TCHAR BrowseName_InstanceCount[] = _T("InstanceCount");
static const TCHAR BrowseName_InstanceNode[] = _T("InstanceNode");
static const TCHAR BrowseName_InstrumentRange[] = _T("InstrumentRange");
static const TCHAR BrowseName_Int16[] = _T("Int16");
static const TCHAR BrowseName_Int32[] = _T("Int32");
static const TCHAR BrowseName_Int64[] = _T("Int64");
static const TCHAR BrowseName_Integer[] = _T("Integer");
static const TCHAR BrowseName_IntegerId[] = _T("IntegerId");
static const TCHAR BrowseName_IntermediateResult[] = _T("IntermediateResult");
static const TCHAR BrowseName_InvalidHostname[] = _T("InvalidHostname");
static const TCHAR BrowseName_InvalidUri[] = _T("InvalidUri");
static const TCHAR BrowseName_InvocationCreationTime[] = _T("InvocationCreationTime");
static const TCHAR BrowseName_IsDeleteModified[] = _T("IsDeleteModified");
static const TCHAR BrowseName_IsNamespaceSubset[] = _T("IsNamespaceSubset");
static const TCHAR BrowseName_IssuedIdentityToken[] = _T("IssuedIdentityToken");
static const TCHAR BrowseName_KerberosIdentityToken[] = _T("KerberosIdentityToken");
static const TCHAR BrowseName_LastMethodCall[] = _T("LastMethodCall");
static const TCHAR BrowseName_LastMethodCallTime[] = _T("LastMethodCallTime");
static const TCHAR BrowseName_LastMethodInputArguments[] = _T("LastMethodInputArguments");
static const TCHAR BrowseName_LastMethodOutputArguments[] = _T("LastMethodOutputArguments");
static const TCHAR BrowseName_LastMethodReturnStatus[] = _T("LastMethodReturnStatus");
static const TCHAR BrowseName_LastMethodSessionId[] = _T("LastMethodSessionId");
static const TCHAR BrowseName_LastResponse[] = _T("LastResponse");
static const TCHAR BrowseName_LastSeverity[] = _T("LastSeverity");
static const TCHAR BrowseName_LastTransition[] = _T("LastTransition");
static const TCHAR BrowseName_LastTransitionTime[] = _T("LastTransitionTime");
static const TCHAR BrowseName_LastUpdateTime[] = _T("LastUpdateTime");
static const TCHAR BrowseName_LatePublishRequestCount[] = _T("LatePublishRequestCount");
static const TCHAR BrowseName_LimitAlarmType[] = _T("LimitAlarmType");
static const TCHAR BrowseName_LimitState[] = _T("LimitState");
static const TCHAR BrowseName_LiteralOperand[] = _T("LiteralOperand");
static const TCHAR BrowseName_LocaleId[] = _T("LocaleId");
static const TCHAR BrowseName_LocaleIdArray[] = _T("LocaleIdArray");
static const TCHAR BrowseName_LocaleIds[] = _T("LocaleIds");
static const TCHAR BrowseName_LocalizedText[] = _T("LocalizedText");
static const TCHAR BrowseName_LocalTime[] = _T("LocalTime");
static const TCHAR BrowseName_Lock[] = _T("Lock");
static const TCHAR BrowseName_LockType[] = _T("LockType");
static const TCHAR BrowseName_Low[] = _T("Low");
static const TCHAR BrowseName_LowLimit[] = _T("LowLimit");
static const TCHAR BrowseName_LowLow[] = _T("LowLow");
static const TCHAR BrowseName_LowLowLimit[] = _T("LowLowLimit");
static const TCHAR BrowseName_LowLowState[] = _T("LowLowState");
static const TCHAR BrowseName_LowLowToLow[] = _T("LowLowToLow");
static const TCHAR BrowseName_LowState[] = _T("LowState");
static const TCHAR BrowseName_LowToLowLow[] = _T("LowToLowLow");
static const TCHAR BrowseName_MaintenanceConditionClassType[] = _T("MaintenanceConditionClassType");
static const TCHAR BrowseName_ManufacturerName[] = _T("ManufacturerName");
static const TCHAR BrowseName_MaxArrayLength[] = _T("MaxArrayLength");
static const TCHAR BrowseName_MaxBrowseContinuationPoints[] = _T("MaxBrowseContinuationPoints");
static const TCHAR BrowseName_MaxHistoryContinuationPoints[] = _T("MaxHistoryContinuationPoints");
static const TCHAR BrowseName_MaxInstanceCount[] = _T("MaxInstanceCount");
static const TCHAR BrowseName_MaxKeepAliveCount[] = _T("MaxKeepAliveCount");
static const TCHAR BrowseName_MaxLifetimeCount[] = _T("MaxLifetimeCount");
static const TCHAR BrowseName_MaxMonitoredItemsPerCall[] = _T("MaxMonitoredItemsPerCall");
static const TCHAR BrowseName_MaxNodesPerBrowse[] = _T("MaxNodesPerBrowse");
static const TCHAR BrowseName_MaxNodesPerHistoryReadData[] = _T("MaxNodesPerHistoryReadData");
static const TCHAR BrowseName_MaxNodesPerHistoryReadEvents[] = _T("MaxNodesPerHistoryReadEvents");
static const TCHAR BrowseName_MaxNodesPerHistoryUpdateData[] = _T("MaxNodesPerHistoryUpdateData");
static const TCHAR BrowseName_MaxNodesPerHistoryUpdateEvents[] = _T("MaxNodesPerHistoryUpdateEvents");
static const TCHAR BrowseName_MaxNodesPerMethodCall[] = _T("MaxNodesPerMethodCall");
static const TCHAR BrowseName_MaxNodesPerNodeManagement[] = _T("MaxNodesPerNodeManagement");
static const TCHAR BrowseName_MaxNodesPerRead[] = _T("MaxNodesPerRead");
static const TCHAR BrowseName_MaxNodesPerRegisterNodes[] = _T("MaxNodesPerRegisterNodes");
static const TCHAR BrowseName_MaxNodesPerTranslateBrowsePathsToNodeIds[] = _T("MaxNodesPerTranslateBrowsePathsToNodeIds");
static const TCHAR BrowseName_MaxNodesPerWrite[] = _T("MaxNodesPerWrite");
static const TCHAR BrowseName_MaxNotificationsPerPublish[] = _T("MaxNotificationsPerPublish");
static const TCHAR BrowseName_MaxQueryContinuationPoints[] = _T("MaxQueryContinuationPoints");
static const TCHAR BrowseName_MaxRecycleCount[] = _T("MaxRecycleCount");
static const TCHAR BrowseName_MaxResponseMessageSize[] = _T("MaxResponseMessageSize");
static const TCHAR BrowseName_MaxReturnDataValues[] = _T("MaxReturnDataValues");
static const TCHAR BrowseName_MaxReturnEventValues[] = _T("MaxReturnEventValues");
static const TCHAR BrowseName_MaxSampledMonitoredItemsCount[] = _T("MaxSampledMonitoredItemsCount");
static const TCHAR BrowseName_MaxStringLength[] = _T("MaxStringLength");
static const TCHAR BrowseName_MaxTimeInterval[] = _T("MaxTimeInterval");
static const TCHAR BrowseName_MaxTimeShelved[] = _T("MaxTimeShelved");
static const TCHAR BrowseName_MaxTrustListSize[] = _T("MaxTrustListSize");
static const TCHAR BrowseName_Message[] = _T("Message");
static const TCHAR BrowseName_MessageSecurityMode[] = _T("MessageSecurityMode");
static const TCHAR BrowseName_MethodAttributes[] = _T("MethodAttributes");
static const TCHAR BrowseName_MethodId[] = _T("MethodId");
static const TCHAR BrowseName_MethodNode[] = _T("MethodNode");
static const TCHAR BrowseName_MinSupportedSampleRate[] = _T("MinSupportedSampleRate");
static const TCHAR BrowseName_MinTimeInterval[] = _T("MinTimeInterval");
static const TCHAR BrowseName_ModelChangeStructureDataType[] = _T("ModelChangeStructureDataType");
static const TCHAR BrowseName_ModelChangeStructureVerbMask[] = _T("ModelChangeStructureVerbMask");
static const TCHAR BrowseName_ModellingRule_ExposesItsArray[] = _T("ExposesItsArray");
static const TCHAR BrowseName_ModellingRule_Mandatory[] = _T("Mandatory");
static const TCHAR BrowseName_ModellingRule_MandatoryPlaceholder[] = _T("MandatoryPlaceholder");
static const TCHAR BrowseName_ModellingRule_MandatoryShared[] = _T("MandatoryShared");
static const TCHAR BrowseName_ModellingRule_Optional[] = _T("Optional");
static const TCHAR BrowseName_ModellingRule_OptionalPlaceholder[] = _T("OptionalPlaceholder");
static const TCHAR BrowseName_ModellingRules[] = _T("ModellingRules");
static const TCHAR BrowseName_ModellingRuleType[] = _T("ModellingRuleType");
static const TCHAR BrowseName_ModificationInfo[] = _T("ModificationInfo");
static const TCHAR BrowseName_ModifyCount[] = _T("ModifyCount");
static const TCHAR BrowseName_ModifyMonitoredItemsCount[] = _T("ModifyMonitoredItemsCount");
static const TCHAR BrowseName_ModifyMonitoredItemsRequest[] = _T("ModifyMonitoredItemsRequest");
static const TCHAR BrowseName_ModifyMonitoredItemsResponse[] = _T("ModifyMonitoredItemsResponse");
static const TCHAR BrowseName_ModifySubscriptionCount[] = _T("ModifySubscriptionCount");
static const TCHAR BrowseName_ModifySubscriptionRequest[] = _T("ModifySubscriptionRequest");
static const TCHAR BrowseName_ModifySubscriptionResponse[] = _T("ModifySubscriptionResponse");
static const TCHAR BrowseName_MonitoredItemCount[] = _T("MonitoredItemCount");
static const TCHAR BrowseName_MonitoredItemCreateRequest[] = _T("MonitoredItemCreateRequest");
static const TCHAR BrowseName_MonitoredItemCreateResult[] = _T("MonitoredItemCreateResult");
static const TCHAR BrowseName_MonitoredItemModifyRequest[] = _T("MonitoredItemModifyRequest");
static const TCHAR BrowseName_MonitoredItemModifyResult[] = _T("MonitoredItemModifyResult");
static const TCHAR BrowseName_MonitoredItemNotification[] = _T("MonitoredItemNotification");
static const TCHAR BrowseName_MonitoringFilter[] = _T("MonitoringFilter");
static const TCHAR BrowseName_MonitoringFilterResult[] = _T("MonitoringFilterResult");
static const TCHAR BrowseName_MonitoringMode[] = _T("MonitoringMode");
static const TCHAR BrowseName_MonitoringParameters[] = _T("MonitoringParameters");
static const TCHAR BrowseName_MonitoringQueueOverflowCount[] = _T("MonitoringQueueOverflowCount");
static const TCHAR BrowseName_MulticastDnsEnabled[] = _T("MulticastDnsEnabled");
static const TCHAR BrowseName_MultiStateDiscreteType[] = _T("MultiStateDiscreteType");
static const TCHAR BrowseName_MultiStateValueDiscreteType[] = _T("MultiStateValueDiscreteType");
static const TCHAR BrowseName_Name[] = _T("Name");
static const TCHAR BrowseName_NamespaceArray[] = _T("NamespaceArray");
static const TCHAR BrowseName_NamespaceFile[] = _T("NamespaceFile");
static const TCHAR BrowseName_NamespaceIdentifier[] = _T("<NamespaceIdentifier>");
static const TCHAR BrowseName_NamespaceMetadataType[] = _T("NamespaceMetadataType");
static const TCHAR BrowseName_NamespacePublicationDate[] = _T("NamespacePublicationDate");
static const TCHAR BrowseName_Namespaces[] = _T("Namespaces");
static const TCHAR BrowseName_NamespacesType[] = _T("NamespacesType");
static const TCHAR BrowseName_NamespaceUri[] = _T("NamespaceUri");
static const TCHAR BrowseName_NamespaceVersion[] = _T("NamespaceVersion");
static const TCHAR BrowseName_NamingRule[] = _T("NamingRule");
static const TCHAR BrowseName_NamingRuleType[] = _T("NamingRuleType");
static const TCHAR BrowseName_NDimensionArrayItemType[] = _T("NDimensionArrayItemType");
static const TCHAR BrowseName_NetworkGroupDataType[] = _T("NetworkGroupDataType");
static const TCHAR BrowseName_NewStateId[] = _T("NewStateId");
static const TCHAR BrowseName_NewValue[] = _T("NewValue");
static const TCHAR BrowseName_NewValues[] = _T("NewValues");
static const TCHAR BrowseName_NextSequenceNumber[] = _T("NextSequenceNumber");
static const TCHAR BrowseName_Node[] = _T("Node");
static const TCHAR BrowseName_NodeAttributes[] = _T("NodeAttributes");
static const TCHAR BrowseName_NodeAttributesMask[] = _T("NodeAttributesMask");
static const TCHAR BrowseName_NodeClass[] = _T("NodeClass");
static const TCHAR BrowseName_NodeId[] = _T("NodeId");
static const TCHAR BrowseName_NodeReference[] = _T("NodeReference");
static const TCHAR BrowseName_NodesToAdd[] = _T("NodesToAdd");
static const TCHAR BrowseName_NodesToDelete[] = _T("NodesToDelete");
static const TCHAR BrowseName_NodeTypeDescription[] = _T("NodeTypeDescription");
static const TCHAR BrowseName_NodeVersion[] = _T("NodeVersion");
static const TCHAR BrowseName_NonExclusiveDeviationAlarmType[] = _T("NonExclusiveDeviationAlarmType");
static const TCHAR BrowseName_NonExclusiveLevelAlarmType[] = _T("NonExclusiveLevelAlarmType");
static const TCHAR BrowseName_NonExclusiveLimitAlarmType[] = _T("NonExclusiveLimitAlarmType");
static const TCHAR BrowseName_NonExclusiveRateOfChangeAlarmType[] = _T("NonExclusiveRateOfChangeAlarmType");
static const TCHAR BrowseName_NonHierarchicalReferences[] = _T("NonHierarchicalReferences");
static const TCHAR BrowseName_NonTransparentNetworkRedundancyType[] = _T("NonTransparentNetworkRedundancyType");
static const TCHAR BrowseName_NonTransparentRedundancyType[] = _T("NonTransparentRedundancyType");
static const TCHAR BrowseName_NormalState[] = _T("NormalState");
static const TCHAR BrowseName_NotificationData[] = _T("NotificationData");
static const TCHAR BrowseName_NotificationMessage[] = _T("NotificationMessage");
static const TCHAR BrowseName_NotificationsCount[] = _T("NotificationsCount");
static const TCHAR BrowseName_Number[] = _T("Number");
static const TCHAR BrowseName_NumericRange[] = _T("NumericRange");
static const TCHAR BrowseName_ObjectAttributes[] = _T("ObjectAttributes");
static const TCHAR BrowseName_ObjectNode[] = _T("ObjectNode");
static const TCHAR BrowseName_ObjectsFolder[] = _T("Objects");
static const TCHAR BrowseName_ObjectTypeAttributes[] = _T("ObjectTypeAttributes");
static const TCHAR BrowseName_ObjectTypeNode[] = _T("ObjectTypeNode");
static const TCHAR BrowseName_ObjectTypesFolder[] = _T("ObjectTypes");
static const TCHAR BrowseName_OffNormalAlarmType[] = _T("OffNormalAlarmType");
static const TCHAR BrowseName_OkResponse[] = _T("OkResponse");
static const TCHAR BrowseName_OldStateId[] = _T("OldStateId");
static const TCHAR BrowseName_OldValue[] = _T("OldValue");
static const TCHAR BrowseName_OldValues[] = _T("OldValues");
static const TCHAR BrowseName_OneShotShelve[] = _T("OneShotShelve");
static const TCHAR BrowseName_OneShotShelved[] = _T("OneShotShelved");
static const TCHAR BrowseName_OneShotShelvedToTimedShelved[] = _T("OneShotShelvedToTimedShelved");
static const TCHAR BrowseName_OneShotShelvedToUnshelved[] = _T("OneShotShelvedToUnshelved");
static const TCHAR BrowseName_OPCBinarySchema_TypeSystem[] = _T("OPC Binary");
static const TCHAR BrowseName_OpcUa_BinarySchema[] = _T("Opc.Ua");
static const TCHAR BrowseName_OpcUa_XmlSchema[] = _T("Opc.Ua");
static const TCHAR BrowseName_Open[] = _T("Open");
static const TCHAR BrowseName_OpenCount[] = _T("OpenCount");
static const TCHAR BrowseName_OpenFileMode[] = _T("OpenFileMode");
static const TCHAR BrowseName_OpenSecureChannelRequest[] = _T("OpenSecureChannelRequest");
static const TCHAR BrowseName_OpenSecureChannelResponse[] = _T("OpenSecureChannelResponse");
static const TCHAR BrowseName_OpenWithMasks[] = _T("OpenWithMasks");
static const TCHAR BrowseName_OperationLimits[] = _T("OperationLimits");
static const TCHAR BrowseName_OperationLimitsType[] = _T("OperationLimitsType");
static const TCHAR BrowseName_OptionSetType[] = _T("OptionSetType");
static const TCHAR BrowseName_OptionSetValues[] = _T("OptionSetValues");
static const TCHAR BrowseName_Organizes[] = _T("Organizes");
static const TCHAR BrowseName_OutputArguments[] = _T("OutputArguments");
static const TCHAR BrowseName_ParameterDataTypeId[] = _T("ParameterDataTypeId");
static const TCHAR BrowseName_ParsingResult[] = _T("ParsingResult");
static const TCHAR BrowseName_PercentDataBad[] = _T("PercentDataBad");
static const TCHAR BrowseName_PercentDataGood[] = _T("PercentDataGood");
static const TCHAR BrowseName_PerformInsertReplace[] = _T("PerformInsertReplace");
static const TCHAR BrowseName_PerformUpdateType[] = _T("PerformUpdateType");
static const TCHAR BrowseName_Priority[] = _T("Priority");
static const TCHAR BrowseName_ProcessConditionClassType[] = _T("ProcessConditionClassType");
static const TCHAR BrowseName_ProductName[] = _T("ProductName");
static const TCHAR BrowseName_ProductUri[] = _T("ProductUri");
static const TCHAR BrowseName_ProgramDiagnosticDataType[] = _T("ProgramDiagnosticDataType");
static const TCHAR BrowseName_ProgramDiagnostics[] = _T("ProgramDiagnostics");
static const TCHAR BrowseName_ProgramDiagnosticType[] = _T("ProgramDiagnosticType");
static const TCHAR BrowseName_ProgramStateMachineType[] = _T("ProgramStateMachineType");
static const TCHAR BrowseName_ProgramTransitionAuditEventType[] = _T("ProgramTransitionAuditEventType");
static const TCHAR BrowseName_ProgramTransitionEventType[] = _T("ProgramTransitionEventType");
static const TCHAR BrowseName_Progress[] = _T("Progress");
static const TCHAR BrowseName_ProgressEventType[] = _T("ProgressEventType");
static const TCHAR BrowseName_Prompt[] = _T("Prompt");
static const TCHAR BrowseName_PropertyType[] = _T("PropertyType");
static const TCHAR BrowseName_PublishCount[] = _T("PublishCount");
static const TCHAR BrowseName_PublishingEnabled[] = _T("PublishingEnabled");
static const TCHAR BrowseName_PublishingInterval[] = _T("PublishingInterval");
static const TCHAR BrowseName_PublishingIntervalCount[] = _T("PublishingIntervalCount");
static const TCHAR BrowseName_PublishRequest[] = _T("PublishRequest");
static const TCHAR BrowseName_PublishRequestCount[] = _T("PublishRequestCount");
static const TCHAR BrowseName_PublishResponse[] = _T("PublishResponse");
static const TCHAR BrowseName_QualifiedName[] = _T("QualifiedName");
static const TCHAR BrowseName_Quality[] = _T("Quality");
static const TCHAR BrowseName_QueryDataDescription[] = _T("QueryDataDescription");
static const TCHAR BrowseName_QueryDataSet[] = _T("QueryDataSet");
static const TCHAR BrowseName_QueryFirstCount[] = _T("QueryFirstCount");
static const TCHAR BrowseName_QueryFirstRequest[] = _T("QueryFirstRequest");
static const TCHAR BrowseName_QueryFirstResponse[] = _T("QueryFirstResponse");
static const TCHAR BrowseName_QueryNextCount[] = _T("QueryNextCount");
static const TCHAR BrowseName_QueryNextRequest[] = _T("QueryNextRequest");
static const TCHAR BrowseName_QueryNextResponse[] = _T("QueryNextResponse");
static const TCHAR BrowseName_Range[] = _T("Range");
static const TCHAR BrowseName_Read[] = _T("Read");
static const TCHAR BrowseName_ReadAtTimeDetails[] = _T("ReadAtTimeDetails");
static const TCHAR BrowseName_ReadCount[] = _T("ReadCount");
static const TCHAR BrowseName_ReadEventDetails[] = _T("ReadEventDetails");
static const TCHAR BrowseName_ReadProcessedDetails[] = _T("ReadProcessedDetails");
static const TCHAR BrowseName_ReadRawModifiedDetails[] = _T("ReadRawModifiedDetails");
static const TCHAR BrowseName_ReadRequest[] = _T("ReadRequest");
static const TCHAR BrowseName_ReadResponse[] = _T("ReadResponse");
static const TCHAR BrowseName_ReadValueId[] = _T("ReadValueId");
static const TCHAR BrowseName_Ready[] = _T("Ready");
static const TCHAR BrowseName_ReadyToHalted[] = _T("ReadyToHalted");
static const TCHAR BrowseName_ReadyToRunning[] = _T("ReadyToRunning");
static const TCHAR BrowseName_ReceiveTime[] = _T("ReceiveTime");
static const TCHAR BrowseName_RecycleCount[] = _T("RecycleCount");
static const TCHAR BrowseName_RedundancySupport[] = _T("RedundancySupport");
static const TCHAR BrowseName_RedundantServerArray[] = _T("RedundantServerArray");
static const TCHAR BrowseName_RedundantServerDataType[] = _T("RedundantServerDataType");
static const TCHAR BrowseName_ReferenceDescription[] = _T("ReferenceDescription");
static const TCHAR BrowseName_ReferenceNode[] = _T("ReferenceNode");
static const TCHAR BrowseName_References[] = _T("References");
static const TCHAR BrowseName_ReferencesToAdd[] = _T("ReferencesToAdd");
static const TCHAR BrowseName_ReferencesToDelete[] = _T("ReferencesToDelete");
static const TCHAR BrowseName_ReferenceTypeAttributes[] = _T("ReferenceTypeAttributes");
static const TCHAR BrowseName_ReferenceTypeNode[] = _T("ReferenceTypeNode");
static const TCHAR BrowseName_ReferenceTypesFolder[] = _T("ReferenceTypes");
static const TCHAR BrowseName_RefreshEndEventType[] = _T("RefreshEndEventType");
static const TCHAR BrowseName_RefreshRequiredEventType[] = _T("RefreshRequiredEventType");
static const TCHAR BrowseName_RefreshStartEventType[] = _T("RefreshStartEventType");
static const TCHAR BrowseName_RegisteredServer[] = _T("RegisteredServer");
static const TCHAR BrowseName_RegisteredServer2[] = _T("RegisteredServer2");
static const TCHAR BrowseName_RegisterNodesCount[] = _T("RegisterNodesCount");
static const TCHAR BrowseName_RegisterNodesRequest[] = _T("RegisterNodesRequest");
static const TCHAR BrowseName_RegisterNodesResponse[] = _T("RegisterNodesResponse");
static const TCHAR BrowseName_RegisterServer2Request[] = _T("RegisterServer2Request");
static const TCHAR BrowseName_RegisterServer2Response[] = _T("RegisterServer2Response");
static const TCHAR BrowseName_RegisterServerRequest[] = _T("RegisterServerRequest");
static const TCHAR BrowseName_RegisterServerResponse[] = _T("RegisterServerResponse");
static const TCHAR BrowseName_RejectedRequestsCount[] = _T("RejectedRequestsCount");
static const TCHAR BrowseName_RejectedSessionCount[] = _T("RejectedSessionCount");
static const TCHAR BrowseName_RelativePath[] = _T("RelativePath");
static const TCHAR BrowseName_RelativePathElement[] = _T("RelativePathElement");
static const TCHAR BrowseName_RemoveCertificate[] = _T("RemoveCertificate");
static const TCHAR BrowseName_ReplaceDataCapability[] = _T("ReplaceDataCapability");
static const TCHAR BrowseName_ReplaceEventCapability[] = _T("ReplaceEventCapability");
static const TCHAR BrowseName_RepublishCount[] = _T("RepublishCount");
static const TCHAR BrowseName_RepublishMessageCount[] = _T("RepublishMessageCount");
static const TCHAR BrowseName_RepublishMessageRequestCount[] = _T("RepublishMessageRequestCount");
static const TCHAR BrowseName_RepublishRequest[] = _T("RepublishRequest");
static const TCHAR BrowseName_RepublishRequestCount[] = _T("RepublishRequestCount");
static const TCHAR BrowseName_RepublishResponse[] = _T("RepublishResponse");
static const TCHAR BrowseName_ReqTimes[] = _T("ReqTimes");
static const TCHAR BrowseName_RequestedLifetime[] = _T("RequestedLifetime");
static const TCHAR BrowseName_RequestHandle[] = _T("RequestHandle");
static const TCHAR BrowseName_RequestHeader[] = _T("RequestHeader");
static const TCHAR BrowseName_RequestType[] = _T("RequestType");
static const TCHAR BrowseName_Reset[] = _T("Reset");
static const TCHAR BrowseName_Respond[] = _T("Respond");
static const TCHAR BrowseName_ResponseHeader[] = _T("ResponseHeader");
static const TCHAR BrowseName_ResponseOptionSet[] = _T("ResponseOptionSet");
static const TCHAR BrowseName_Restart[] = _T("Restart");
static const TCHAR BrowseName_Resume[] = _T("Resume");
static const TCHAR BrowseName_Retain[] = _T("Retain");
static const TCHAR BrowseName_RevisedSessionTimeout[] = _T("RevisedSessionTimeout");
static const TCHAR BrowseName_RootFolder[] = _T("Root");
static const TCHAR BrowseName_Rsa2084ApplicationCertificateType[] = _T("Rsa2084ApplicationCertificateType");
static const TCHAR BrowseName_RsaBasicApplicationCertificateType[] = _T("RsaBasicApplicationCertificateType");
static const TCHAR BrowseName_Running[] = _T("Running");
static const TCHAR BrowseName_RunningToHalted[] = _T("RunningToHalted");
static const TCHAR BrowseName_RunningToReady[] = _T("RunningToReady");
static const TCHAR BrowseName_RunningToSuspended[] = _T("RunningToSuspended");
static const TCHAR BrowseName_SampledMonitoredItemsCount[] = _T("SampledMonitoredItemsCount");
static const TCHAR BrowseName_SamplingInterval[] = _T("SamplingInterval");
static const TCHAR BrowseName_SamplingIntervalDiagnosticsArray[] = _T("SamplingIntervalDiagnosticsArray");
static const TCHAR BrowseName_SamplingIntervalDiagnosticsArrayType[] = _T("SamplingIntervalDiagnosticsArrayType");
static const TCHAR BrowseName_SamplingIntervalDiagnosticsDataType[] = _T("SamplingIntervalDiagnosticsDataType");
static const TCHAR BrowseName_SamplingIntervalDiagnosticsType[] = _T("SamplingIntervalDiagnosticsType");
static const TCHAR BrowseName_SByte[] = _T("SByte");
static const TCHAR BrowseName_ScalarTestType[] = _T("ScalarTestType");
static const TCHAR BrowseName_SecondsTillShutdown[] = _T("SecondsTillShutdown");
static const TCHAR BrowseName_SecureChannelId[] = _T("SecureChannelId");
static const TCHAR BrowseName_SecurityMode[] = _T("SecurityMode");
static const TCHAR BrowseName_SecurityPolicyUri[] = _T("SecurityPolicyUri");
static const TCHAR BrowseName_SecurityRejectedRequestsCount[] = _T("SecurityRejectedRequestsCount");
static const TCHAR BrowseName_SecurityRejectedSessionCount[] = _T("SecurityRejectedSessionCount");
static const TCHAR BrowseName_SecurityTokenRequestType[] = _T("SecurityTokenRequestType");
static const TCHAR BrowseName_SelectedResponse[] = _T("SelectedResponse");
static const TCHAR BrowseName_SemanticChangeEventType[] = _T("SemanticChangeEventType");
static const TCHAR BrowseName_SemanticChangeStructureDataType[] = _T("SemanticChangeStructureDataType");
static const TCHAR BrowseName_Server[] = _T("Server");
static const TCHAR BrowseName_ServerArray[] = _T("ServerArray");
static const TCHAR BrowseName_ServerCapabilities[] = _T("ServerCapabilities");
static const TCHAR BrowseName_ServerCapabilitiesType[] = _T("ServerCapabilitiesType");
static const TCHAR BrowseName_ServerConfiguration[] = _T("ServerConfiguration");
static const TCHAR BrowseName_ServerConfigurationType[] = _T("ServerConfigurationType");
static const TCHAR BrowseName_ServerDiagnostics[] = _T("ServerDiagnostics");
static const TCHAR BrowseName_ServerDiagnosticsSummary[] = _T("ServerDiagnosticsSummary");
static const TCHAR BrowseName_ServerDiagnosticsSummaryDataType[] = _T("ServerDiagnosticsSummaryDataType");
static const TCHAR BrowseName_ServerDiagnosticsSummaryType[] = _T("ServerDiagnosticsSummaryType");
static const TCHAR BrowseName_ServerDiagnosticsType[] = _T("ServerDiagnosticsType");
static const TCHAR BrowseName_ServerId[] = _T("ServerId");
static const TCHAR BrowseName_ServerLock[] = _T("ServerLock");
static const TCHAR BrowseName_ServerNetworkGroups[] = _T("ServerNetworkGroups");
static const TCHAR BrowseName_ServerOnNetwork[] = _T("ServerOnNetwork");
static const TCHAR BrowseName_ServerProfileArray[] = _T("ServerProfileArray");
static const TCHAR BrowseName_ServerRedundancy[] = _T("ServerRedundancy");
static const TCHAR BrowseName_ServerRedundancyType[] = _T("ServerRedundancyType");
static const TCHAR BrowseName_ServerState[] = _T("ServerState");
static const TCHAR BrowseName_ServerStatus[] = _T("ServerStatus");
static const TCHAR BrowseName_ServerStatusDataType[] = _T("ServerStatusDataType");
static const TCHAR BrowseName_ServerStatusType[] = _T("ServerStatusType");
static const TCHAR BrowseName_ServerType[] = _T("ServerType");
static const TCHAR BrowseName_ServerUri[] = _T("ServerUri");
static const TCHAR BrowseName_ServerUriArray[] = _T("ServerUriArray");
static const TCHAR BrowseName_ServerVendorCapabilityType[] = _T("ServerVendorCapabilityType");
static const TCHAR BrowseName_ServerViewCount[] = _T("ServerViewCount");
static const TCHAR BrowseName_ServiceCounterDataType[] = _T("ServiceCounterDataType");
static const TCHAR BrowseName_ServiceFault[] = _T("ServiceFault");
static const TCHAR BrowseName_ServiceLevel[] = _T("ServiceLevel");
static const TCHAR BrowseName_SessionAbortCount[] = _T("SessionAbortCount");
static const TCHAR BrowseName_SessionAuthenticationToken[] = _T("SessionAuthenticationToken");
static const TCHAR BrowseName_SessionDiagnostics[] = _T("SessionDiagnostics");
static const TCHAR BrowseName_SessionDiagnosticsArray[] = _T("SessionDiagnosticsArray");
static const TCHAR BrowseName_SessionDiagnosticsArrayType[] = _T("SessionDiagnosticsArrayType");
static const TCHAR BrowseName_SessionDiagnosticsDataType[] = _T("SessionDiagnosticsDataType");
static const TCHAR BrowseName_SessionDiagnosticsObjectType[] = _T("SessionDiagnosticsObjectType");
static const TCHAR BrowseName_SessionDiagnosticsVariableType[] = _T("SessionDiagnosticsVariableType");
static const TCHAR BrowseName_SessionId[] = _T("SessionId");
static const TCHAR BrowseName_SessionName[] = _T("SessionName");
static const TCHAR BrowseName_SessionPlaceholder[] = _T("<SessionPlaceholder>");
static const TCHAR BrowseName_SessionsDiagnosticsSummary[] = _T("SessionsDiagnosticsSummary");
static const TCHAR BrowseName_SessionsDiagnosticsSummaryType[] = _T("SessionsDiagnosticsSummaryType");
static const TCHAR BrowseName_SessionSecurityDiagnostics[] = _T("SessionSecurityDiagnostics");
static const TCHAR BrowseName_SessionSecurityDiagnosticsArray[] = _T("SessionSecurityDiagnosticsArray");
static const TCHAR BrowseName_SessionSecurityDiagnosticsArrayType[] = _T("SessionSecurityDiagnosticsArrayType");
static const TCHAR BrowseName_SessionSecurityDiagnosticsDataType[] = _T("SessionSecurityDiagnosticsDataType");
static const TCHAR BrowseName_SessionSecurityDiagnosticsType[] = _T("SessionSecurityDiagnosticsType");
static const TCHAR BrowseName_SessionTimeoutCount[] = _T("SessionTimeoutCount");
static const TCHAR BrowseName_SetMonitoringModeCount[] = _T("SetMonitoringModeCount");
static const TCHAR BrowseName_SetMonitoringModeRequest[] = _T("SetMonitoringModeRequest");
static const TCHAR BrowseName_SetMonitoringModeResponse[] = _T("SetMonitoringModeResponse");
static const TCHAR BrowseName_SetpointNode[] = _T("SetpointNode");
static const TCHAR BrowseName_SetPosition[] = _T("SetPosition");
static const TCHAR BrowseName_SetPublishingModeCount[] = _T("SetPublishingModeCount");
static const TCHAR BrowseName_SetPublishingModeRequest[] = _T("SetPublishingModeRequest");
static const TCHAR BrowseName_SetPublishingModeResponse[] = _T("SetPublishingModeResponse");
static const TCHAR BrowseName_SetTriggeringCount[] = _T("SetTriggeringCount");
static const TCHAR BrowseName_SetTriggeringRequest[] = _T("SetTriggeringRequest");
static const TCHAR BrowseName_SetTriggeringResponse[] = _T("SetTriggeringResponse");
static const TCHAR BrowseName_Severity[] = _T("Severity");
static const TCHAR BrowseName_ShelvedStateMachineType[] = _T("ShelvedStateMachineType");
static const TCHAR BrowseName_ShelvingState[] = _T("ShelvingState");
static const TCHAR BrowseName_ShelvingTime[] = _T("ShelvingTime");
static const TCHAR BrowseName_ShutdownReason[] = _T("ShutdownReason");
static const TCHAR BrowseName_SignatureData[] = _T("SignatureData");
static const TCHAR BrowseName_SignedSoftwareCertificate[] = _T("SignedSoftwareCertificate");
static const TCHAR BrowseName_SimpleAttributeOperand[] = _T("SimpleAttributeOperand");
static const TCHAR BrowseName_Size[] = _T("Size");
static const TCHAR BrowseName_SoftwareCertificate[] = _T("SoftwareCertificate");
static const TCHAR BrowseName_SoftwareCertificates[] = _T("SoftwareCertificates");
static const TCHAR BrowseName_SoftwareVersion[] = _T("SoftwareVersion");
static const TCHAR BrowseName_SourceName[] = _T("SourceName");
static const TCHAR BrowseName_SourceNode[] = _T("SourceNode");
static const TCHAR BrowseName_SourceTimestamp[] = _T("SourceTimestamp");
static const TCHAR BrowseName_Start[] = _T("Start");
static const TCHAR BrowseName_StartOfArchive[] = _T("StartOfArchive");
static const TCHAR BrowseName_StartOfOnlineArchive[] = _T("StartOfOnlineArchive");
static const TCHAR BrowseName_StartTime[] = _T("StartTime");
static const TCHAR BrowseName_State[] = _T("State");
static const TCHAR BrowseName_StateMachineType[] = _T("StateMachineType");
static const TCHAR BrowseName_StateNumber[] = _T("StateNumber");
static const TCHAR BrowseName_StateType[] = _T("StateType");
static const TCHAR BrowseName_StateVariableType[] = _T("StateVariableType");
static const TCHAR BrowseName_StaticNodeIdIdentifierTypes[] = _T("StaticNodeIdIdentifierTypes");
static const TCHAR BrowseName_StaticNumericNodeIdRange[] = _T("StaticNumericNodeIdRange");
static const TCHAR BrowseName_StaticStringNodeIdPattern[] = _T("StaticStringNodeIdPattern");
static const TCHAR BrowseName_Status[] = _T("Status");
static const TCHAR BrowseName_StatusChangeNotification[] = _T("StatusChangeNotification");
static const TCHAR BrowseName_StatusCode[] = _T("StatusCode");
static const TCHAR BrowseName_StatusResult[] = _T("StatusResult");
static const TCHAR BrowseName_Stepped[] = _T("Stepped");
static const TCHAR BrowseName_String[] = _T("String");
static const TCHAR BrowseName_Structure[] = _T("Structure");
static const TCHAR BrowseName_SubscriptionAcknowledgement[] = _T("SubscriptionAcknowledgement");
static const TCHAR BrowseName_SubscriptionDiagnosticsArray[] = _T("SubscriptionDiagnosticsArray");
static const TCHAR BrowseName_SubscriptionDiagnosticsArrayType[] = _T("SubscriptionDiagnosticsArrayType");
static const TCHAR BrowseName_SubscriptionDiagnosticsDataType[] = _T("SubscriptionDiagnosticsDataType");
static const TCHAR BrowseName_SubscriptionDiagnosticsType[] = _T("SubscriptionDiagnosticsType");
static const TCHAR BrowseName_SubscriptionId[] = _T("SubscriptionId");
static const TCHAR BrowseName_SupportedCertificateTypes[] = _T("SupportedCertificateTypes");
static const TCHAR BrowseName_SupportedPrivateKeyFormats[] = _T("SupportedPrivateKeyFormats");
static const TCHAR BrowseName_SupportedProfile[] = _T("SupportedProfile");
static const TCHAR BrowseName_SuppressedOrShelved[] = _T("SuppressedOrShelved");
static const TCHAR BrowseName_SuppressedState[] = _T("SuppressedState");
static const TCHAR BrowseName_Suspend[] = _T("Suspend");
static const TCHAR BrowseName_Suspended[] = _T("Suspended");
static const TCHAR BrowseName_SuspendedToHalted[] = _T("SuspendedToHalted");
static const TCHAR BrowseName_SuspendedToReady[] = _T("SuspendedToReady");
static const TCHAR BrowseName_SuspendedToRunning[] = _T("SuspendedToRunning");
static const TCHAR BrowseName_SystemConditionClassType[] = _T("SystemConditionClassType");
static const TCHAR BrowseName_SystemEventType[] = _T("SystemEventType");
static const TCHAR BrowseName_SystemOffNormalAlarmType[] = _T("SystemOffNormalAlarmType");
static const TCHAR BrowseName_SystemState[] = _T("SystemState");
static const TCHAR BrowseName_SystemStatusChangeEventType[] = _T("SystemStatusChangeEventType");
static const TCHAR BrowseName_TestStackExRequest[] = _T("TestStackExRequest");
static const TCHAR BrowseName_TestStackExResponse[] = _T("TestStackExResponse");
static const TCHAR BrowseName_TestStackRequest[] = _T("TestStackRequest");
static const TCHAR BrowseName_TestStackResponse[] = _T("TestStackResponse");
static const TCHAR BrowseName_Time[] = _T("Time");
static const TCHAR BrowseName_TimedShelve[] = _T("TimedShelve");
static const TCHAR BrowseName_TimedShelved[] = _T("TimedShelved");
static const TCHAR BrowseName_TimedShelvedToOneShotShelved[] = _T("TimedShelvedToOneShotShelved");
static const TCHAR BrowseName_TimedShelvedToUnshelved[] = _T("TimedShelvedToUnshelved");
static const TCHAR BrowseName_TimestampsToReturn[] = _T("TimestampsToReturn");
static const TCHAR BrowseName_TimeZoneDataType[] = _T("TimeZoneDataType");
static const TCHAR BrowseName_Title[] = _T("Title");
static const TCHAR BrowseName_ToState[] = _T("ToState");
static const TCHAR BrowseName_TotalRequestCount[] = _T("TotalRequestCount");
static const TCHAR BrowseName_TransferredToAltClientCount[] = _T("TransferredToAltClientCount");
static const TCHAR BrowseName_TransferredToSameClientCount[] = _T("TransferredToSameClientCount");
static const TCHAR BrowseName_TransferRequestCount[] = _T("TransferRequestCount");
static const TCHAR BrowseName_TransferResult[] = _T("TransferResult");
static const TCHAR BrowseName_TransferSubscriptionsCount[] = _T("TransferSubscriptionsCount");
static const TCHAR BrowseName_TransferSubscriptionsRequest[] = _T("TransferSubscriptionsRequest");
static const TCHAR BrowseName_TransferSubscriptionsResponse[] = _T("TransferSubscriptionsResponse");
static const TCHAR BrowseName_Transition[] = _T("Transition");
static const TCHAR BrowseName_TransitionEventType[] = _T("TransitionEventType");
static const TCHAR BrowseName_TransitionNumber[] = _T("TransitionNumber");
static const TCHAR BrowseName_TransitionTime[] = _T("TransitionTime");
static const TCHAR BrowseName_TransitionType[] = _T("TransitionType");
static const TCHAR BrowseName_TransitionVariableType[] = _T("TransitionVariableType");
static const TCHAR BrowseName_TranslateBrowsePathsToNodeIdsCount[] = _T("TranslateBrowsePathsToNodeIdsCount");
static const TCHAR BrowseName_TranslateBrowsePathsToNodeIdsRequest[] = _T("TranslateBrowsePathsToNodeIdsRequest");
static const TCHAR BrowseName_TranslateBrowsePathsToNodeIdsResponse[] = _T("TranslateBrowsePathsToNodeIdsResponse");
static const TCHAR BrowseName_TransparentRedundancyType[] = _T("TransparentRedundancyType");
static const TCHAR BrowseName_TransportProtocol[] = _T("TransportProtocol");
static const TCHAR BrowseName_TreatUncertainAsBad[] = _T("TreatUncertainAsBad");
static const TCHAR BrowseName_TripAlarmType[] = _T("TripAlarmType");
static const TCHAR BrowseName_TrueState[] = _T("TrueState");
static const TCHAR BrowseName_TrustList[] = _T("TrustList");
static const TCHAR BrowseName_TrustListDataType[] = _T("TrustListDataType");
static const TCHAR BrowseName_TrustListMasks[] = _T("TrustListMasks");
static const TCHAR BrowseName_TrustListType[] = _T("TrustListType");
static const TCHAR BrowseName_TrustListUpdatedAuditEventType[] = _T("TrustListUpdatedAuditEventType");
static const TCHAR BrowseName_TwoStateDiscreteType[] = _T("TwoStateDiscreteType");
static const TCHAR BrowseName_TwoStateVariableType[] = _T("TwoStateVariableType");
static const TCHAR BrowseName_TypeNode[] = _T("TypeNode");
static const TCHAR BrowseName_TypesFolder[] = _T("Types");
static const TCHAR BrowseName_UInt16[] = _T("UInt16");
static const TCHAR BrowseName_UInt32[] = _T("UInt32");
static const TCHAR BrowseName_UInt64[] = _T("UInt64");
static const TCHAR BrowseName_UInteger[] = _T("UInteger");
static const TCHAR BrowseName_UnacknowledgedMessageCount[] = _T("UnacknowledgedMessageCount");
static const TCHAR BrowseName_UnauthorizedRequestCount[] = _T("UnauthorizedRequestCount");
static const TCHAR BrowseName_Unlock[] = _T("Unlock");
static const TCHAR BrowseName_UnregisterNodesCount[] = _T("UnregisterNodesCount");
static const TCHAR BrowseName_UnregisterNodesRequest[] = _T("UnregisterNodesRequest");
static const TCHAR BrowseName_UnregisterNodesResponse[] = _T("UnregisterNodesResponse");
static const TCHAR BrowseName_Unshelve[] = _T("Unshelve");
static const TCHAR BrowseName_Unshelved[] = _T("Unshelved");
static const TCHAR BrowseName_UnshelvedToOneShotShelved[] = _T("UnshelvedToOneShotShelved");
static const TCHAR BrowseName_UnshelvedToTimedShelved[] = _T("UnshelvedToTimedShelved");
static const TCHAR BrowseName_UnshelveTime[] = _T("UnshelveTime");
static const TCHAR BrowseName_UpdateCertificate[] = _T("UpdateCertificate");
static const TCHAR BrowseName_UpdateDataCapability[] = _T("UpdateDataCapability");
static const TCHAR BrowseName_UpdateDataDetails[] = _T("UpdateDataDetails");
static const TCHAR BrowseName_UpdatedNode[] = _T("UpdatedNode");
static const TCHAR BrowseName_UpdateEventCapability[] = _T("UpdateEventCapability");
static const TCHAR BrowseName_UpdateEventDetails[] = _T("UpdateEventDetails");
static const TCHAR BrowseName_UpdateStructureDataDetails[] = _T("UpdateStructureDataDetails");
static const TCHAR BrowseName_UserIdentityToken[] = _T("UserIdentityToken");
static const TCHAR BrowseName_UserNameIdentityToken[] = _T("UserNameIdentityToken");
static const TCHAR BrowseName_UserTokenPolicy[] = _T("UserTokenPolicy");
static const TCHAR BrowseName_UserTokenType[] = _T("UserTokenType");
static const TCHAR BrowseName_UserWritable[] = _T("UserWritable");
static const TCHAR BrowseName_UseSlopedExtrapolation[] = _T("UseSlopedExtrapolation");
static const TCHAR BrowseName_UtcTime[] = _T("UtcTime");
static const TCHAR BrowseName_ValueAsText[] = _T("ValueAsText");
static const TCHAR BrowseName_ValuePrecision[] = _T("ValuePrecision");
static const TCHAR BrowseName_VariableAttributes[] = _T("VariableAttributes");
static const TCHAR BrowseName_VariableNode[] = _T("VariableNode");
static const TCHAR BrowseName_VariableTypeAttributes[] = _T("VariableTypeAttributes");
static const TCHAR BrowseName_VariableTypeNode[] = _T("VariableTypeNode");
static const TCHAR BrowseName_VariableTypesFolder[] = _T("VariableTypes");
static const TCHAR BrowseName_VendorCapability[] = _T("<VendorCapability>");
static const TCHAR BrowseName_VendorServerInfo[] = _T("VendorServerInfo");
static const TCHAR BrowseName_VendorServerInfoType[] = _T("VendorServerInfoType");
static const TCHAR BrowseName_ViewAttributes[] = _T("ViewAttributes");
static const TCHAR BrowseName_ViewDescription[] = _T("ViewDescription");
static const TCHAR BrowseName_ViewNode[] = _T("ViewNode");
static const TCHAR BrowseName_ViewsFolder[] = _T("Views");
static const TCHAR BrowseName_ViewVersion[] = _T("ViewVersion");
static const TCHAR BrowseName_Writable[] = _T("Writable");
static const TCHAR BrowseName_Write[] = _T("Write");
static const TCHAR BrowseName_WriteCount[] = _T("WriteCount");
static const TCHAR BrowseName_WriteRequest[] = _T("WriteRequest");
static const TCHAR BrowseName_WriteResponse[] = _T("WriteResponse");
static const TCHAR BrowseName_WriteValue[] = _T("WriteValue");
static const TCHAR BrowseName_X509IdentityToken[] = _T("X509IdentityToken");
static const TCHAR BrowseName_XAxisDefinition[] = _T("XAxisDefinition");
static const TCHAR BrowseName_XmlElement[] = _T("XmlElement");
static const TCHAR BrowseName_XmlSchema_TypeSystem[] = _T("XML Schema");
static const TCHAR BrowseName_XVType[] = _T("XVType");
static const TCHAR BrowseName_XYArrayItemType[] = _T("XYArrayItemType");
static const TCHAR BrowseName_YArrayItemType[] = _T("YArrayItemType");
static const TCHAR BrowseName_YAxisDefinition[] = _T("YAxisDefinition");
static const TCHAR BrowseName_ZAxisDefinition[] = _T("ZAxisDefinition");
////////////////////////////////////////////////////////////////////////////////

#endif	// CONSTANTS_H
